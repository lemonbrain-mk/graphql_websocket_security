type User {
  uID: String
  uName: String
}

type Auth {
    "When set, two factor authentication is activated"
    nonce: String
    authToken: String
    error: String
}

type Query {
    me: User
}

type Mutation {
  "Login a user. Request for an authToken and User details in response"
  login(
    "The username used for login. Typically a unique or email address depending on specific configuration"
    username: String!
    "The plain-text password for the user logging in."
    password: String!
  ): Auth

  checkNonce(
      username: String!
      nonce: String!
      u2SAPass: String!
  ): Auth

  refreshToken: Auth

  "Logout an user."
  logout: Auth

  forgotPassword(
      username: String!
      currentLanguage: String!
  ): [String]

  changePassword(
      password: String!
      passwordConfirm: String!
      token: String!
  ): [String]
}
